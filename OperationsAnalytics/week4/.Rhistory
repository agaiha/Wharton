# Strong demand
SRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, SProfitTransform)
SRevenueStrongR10
SMeanRevenueStrongR10 <- mean(SRevenueStrongR10)
SMeanRevenueStrongR10
SSdRevenueStrongR10 <- sd(SRevenueStrongR10)
SSdRevenueStrongR10
SorderQuantityQ = 5000
SfixedCost = 0
SunitCost = 120
SvariableCost = unitCost * orderQuantityQ;
SvariableCost
# profit transform function
SProfitTransform <- function(x) SfixedCost - SvariableCost +
(price * min(x, SorderQuantityQ))
# Weak demand
SRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, SProfitTransform)
SRevenueWeakR10
SMeanRevenueWeakR10 <- mean(SRevenueWeakR10)
SMeanRevenueWeakR10
SdSRevenueWeakR10 <- sd(SRevenueWeakR10)
SdSRevenueWeakR10
# hitogram of sample data usage
hist(SRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for Supplier S",
col="blue")
# Strong demand
SRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, SProfitTransform)
SRevenueStrongR10
SMeanRevenueStrongR10 <- mean(SRevenueStrongR10)
SMeanRevenueStrongR10
SSdRevenueStrongR10 <- sd(SRevenueStrongR10)
SSdRevenueStrongR10
# hitogram of sample data usage
hist(SRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for supplier S",
col="blue")
##Supplier P
PorderQuantityQ = 10000
PfixedCost = 50000
PunitCost = 100
PvariableCost = unitCost * orderQuantityQ;
PvariableCost
# profit transform function
PProfitTransform <- function(x) PfixedCost - PvariableCost +
(price * min(x, PorderQuantityQ))
# Weak demand
PRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, PProfitTransform)
PRevenueWeakR10
PMeanRevenueWeakR10 <- mean(PRevenueWeakR10)
PMeanRevenueWeakR10
PSdRevenueWeakR10 <- sd(PRevenueWeakR10)
PSdRevenueWeakR10
# hitogram of sample data usage
hist(PRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
##Supplier P
PorderQuantityQ = 10000
PfixedCost = 50000
PunitCost = 100
PvariableCost = PunitCost * PorderQuantityQ;
PvariableCost
# profit transform function
PProfitTransform <- function(x) PfixedCost - PvariableCost +
(price * min(x, PorderQuantityQ))
# Weak demand
PRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, PProfitTransform)
PRevenueWeakR10
PMeanRevenueWeakR10 <- mean(PRevenueWeakR10)
PMeanRevenueWeakR10
PSdRevenueWeakR10 <- sd(PRevenueWeakR10)
PSdRevenueWeakR10
# hitogram of sample data usage
hist(PRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
# Strong demand
PRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, PProfitTransform)
PRevenueStrongR10
PMeanRevenueStrongR10 <- mean(PRevenueStrongR10)
PMeanRevenueStrongR10
PSdRevenueStrongR10 <- sd(PRevenueStrongR10)
PSdRevenueStrongR10
# hitogram of sample data usage
hist(PRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
PRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, PProfitTransform)
PRevenueStrongR10
PMeanRevenueStrongR10 <- mean(PRevenueStrongR10)
PMeanRevenueStrongR10
PSdRevenueStrongR10 <- sd(PRevenueStrongR10)
PSdRevenueStrongR10
# hitogram of sample data usage
hist(PRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
rm(list=ls(all=TRUE))
set.seed(1234)
## IDEA
price = 150
## Market Demand
minDemandWeak = 2000
maxDemandWeak = 8000
minDemandStrong = 6000
maxDemandStrong = 14000
# sample data & sample statistics
# for weak demand
inputVariableDemandWeakD10 = runif(10000, minDemandWeak, maxDemandWeak)
inputVariableDemandWeakD10
meanDemandWeak = mean(inputVariableDemandWeakD10)
meanDemandWeak
# hitogram of sample weak demand
hist(inputVariableDemandWeakD10,
xlab="Weak Demand, D (in single units)",
main="Distribution of Weak Demand, D (in single units)",
col="lightgreen")
# for strong demand
inputVariableDemandStrongD10 = runif(10000, minDemandStrong, maxDemandStrong)
inputVariableDemandStrongD10
meanDemandStrong = mean(inputVariableDemandStrongD10)
meanDemandStrong
# hitogram of sample strong demand
hist(inputVariableDemandStrongD10,
xlab="Strong Demand, D (in single units)",
main="Distribution of Strong Demand, D (in single units)",
col="lightgreen")
##Expected Value for Supplier S
SorderQuantityQ = 5000
SfixedCost = 0
SunitCost = 120
SvariableCost = unitCost * orderQuantityQ;
SvariableCost
# profit transform function
SProfitTransform <- function(x) SfixedCost - SvariableCost +
(price * min(x, SorderQuantityQ))
# Weak demand
SRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, SProfitTransform)
SRevenueWeakR10
SMeanRevenueWeakR10 <- mean(SRevenueWeakR10)
SMeanRevenueWeakR10
SdSRevenueWeakR10 <- sd(SRevenueWeakR10)
SdSRevenueWeakR10
# hitogram of sample data usage
hist(SRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for Supplier S",
col="blue")
# Strong demand
SRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, SProfitTransform)
SRevenueStrongR10
SMeanRevenueStrongR10 <- mean(SRevenueStrongR10)
SMeanRevenueStrongR10
SSdRevenueStrongR10 <- sd(SRevenueStrongR10)
SSdRevenueStrongR10
# hitogram of sample data usage
hist(SRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for supplier S",
col="blue")
##Supplier P
PorderQuantityQ = 10000
PfixedCost = 50000
PunitCost = 100
PvariableCost = PunitCost * PorderQuantityQ;
PvariableCost
# profit transform function
PProfitTransform <- function(x) PfixedCost - PvariableCost +
(price * min(x, PorderQuantityQ))
# Weak demand
PRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, PProfitTransform)
PRevenueWeakR10
PMeanRevenueWeakR10 <- mean(PRevenueWeakR10)
PMeanRevenueWeakR10
PSdRevenueWeakR10 <- sd(PRevenueWeakR10)
PSdRevenueWeakR10
# hitogram of sample data usage
hist(PRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
# Strong demand
PRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, PProfitTransform)
PRevenueStrongR10
PMeanRevenueStrongR10 <- mean(PRevenueStrongR10)
PMeanRevenueStrongR10
PSdRevenueStrongR10 <- sd(PRevenueStrongR10)
PSdRevenueStrongR10
# hitogram of sample data usage
hist(PRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
SMeanRevenueWeakR10
SMeanRevenueStrongR10
PMeanRevenueWeakR10
PMeanRevenueStrongR10
rm(list=ls(all=TRUE))
set.seed(1234)
## IDEA
price = 150
## Market Demand
minDemandWeak = 2000
maxDemandWeak = 8000
minDemandStrong = 6000
maxDemandStrong = 14000
# sample data & sample statistics
# for weak demand
inputVariableDemandWeakD10 = runif(10000, minDemandWeak, maxDemandWeak)
inputVariableDemandWeakD10
meanDemandWeak = mean(inputVariableDemandWeakD10)
meanDemandWeak
# hitogram of sample weak demand
hist(inputVariableDemandWeakD10,
xlab="Weak Demand, D (in single units)",
main="Distribution of Weak Demand, D (in single units)",
col="lightgreen")
# for strong demand
inputVariableDemandStrongD10 = runif(10000, minDemandStrong, maxDemandStrong)
inputVariableDemandStrongD10
meanDemandStrong = mean(inputVariableDemandStrongD10)
meanDemandStrong
# hitogram of sample strong demand
hist(inputVariableDemandStrongD10,
xlab="Strong Demand, D (in single units)",
main="Distribution of Strong Demand, D (in single units)",
col="lightgreen")
##Expected Value for Supplier S
SorderQuantityQ = 5000
SfixedCost = 0
SunitCost = 120
SvariableCost = unitCost * orderQuantityQ;
SvariableCost
##Expected Value for Supplier S
SorderQuantityQ = 5000
SfixedCost = 0
SunitCost = 120
SvariableCost = SunitCost * SorderQuantityQ;
SvariableCost
# profit transform function
SProfitTransform <- function(x) SfixedCost - SvariableCost +
(price * min(x, SorderQuantityQ))
# Weak demand
SRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, SProfitTransform)
SRevenueWeakR10
SMeanRevenueWeakR10 <- mean(SRevenueWeakR10)
SMeanRevenueWeakR10
SdSRevenueWeakR10 <- sd(SRevenueWeakR10)
SdSRevenueWeakR10
# hitogram of sample data usage
hist(SRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for Supplier S",
col="blue")
# Strong demand
SRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, SProfitTransform)
SRevenueStrongR10
SMeanRevenueStrongR10 <- mean(SRevenueStrongR10)
SMeanRevenueStrongR10
SSdRevenueStrongR10 <- sd(SRevenueStrongR10)
SSdRevenueStrongR10
# hitogram of sample data usage
hist(SRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for supplier S",
col="blue")
##Supplier P
PorderQuantityQ = 10000
PfixedCost = 50000
PunitCost = 100
PvariableCost = PunitCost * PorderQuantityQ;
PvariableCost
# profit transform function
PProfitTransform <- function(x) PfixedCost - PvariableCost +
(price * min(x, PorderQuantityQ))
# Weak demand
PRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, PProfitTransform)
PRevenueWeakR10
PMeanRevenueWeakR10 <- mean(PRevenueWeakR10)
PMeanRevenueWeakR10
PSdRevenueWeakR10 <- sd(PRevenueWeakR10)
PSdRevenueWeakR10
# hitogram of sample data usage
hist(PRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
# Strong demand
PRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, PProfitTransform)
PRevenueStrongR10
PMeanRevenueStrongR10 <- mean(PRevenueStrongR10)
PMeanRevenueStrongR10
PSdRevenueStrongR10 <- sd(PRevenueStrongR10)
PSdRevenueStrongR10
# hitogram of sample data usage
hist(PRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
SMeanRevenueWeakR10
SMeanRevenueStrongR10
PMeanRevenueWeakR10
PMeanRevenueStrongR10
PorderQuantityQ = 10000
PfixedCost = 50000
PunitCost = 100
PvariableCost = PunitCost * PorderQuantityQ;
PvariableCost
# profit transform function
PProfitTransform <- function(x) PfixedCost - PvariableCost +
(price * min(x, PorderQuantityQ))
PRevenueTransform <- function(x) price * min(x, PorderQuantityQ)
# Weak demand
PRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, PRevenueTransform)
PRevenueWeakR10
PMeanRevenueWeakR10 <- mean(PRevenueWeakR10)
PMeanRevenueWeakR10
PProfitWeakR10 <- sapply(inputVariableDemandWeakD10, PProfitTransform)
PProfitWeakR10
PMeanProfitWeakR10 <- mean(PProfitWeakR10)
PMeanProfitWeakR10
PProfitTransform <- function(x) - PfixedCost - (PunitCost * PorderQuantityQ) +
(price * min(x, PorderQuantityQ))
PRevenueTransform <- function(x) price * min(x, PorderQuantityQ)
# Weak demand
PRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, PRevenueTransform)
PRevenueWeakR10
PMeanRevenueWeakR10 <- mean(PRevenueWeakR10)
PMeanRevenueWeakR10
PProfitWeakR10 <- sapply(inputVariableDemandWeakD10, PProfitTransform)
PProfitWeakR10
PMeanProfitWeakR10 <- mean(PProfitWeakR10)
PMeanProfitWeakR10
PSdProfitWeakR10 <- sd(PProfitWeakR10)
PSdProfitWeakR10
# hitogram of sample data usage
hist(PRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
# Strong demand
PRevenueStrongR10 <- sapply(inputVariableDemandStrongD10, PProfitTransform)
PRevenueStrongR10
PMeanRevenueStrongR10 <- mean(PRevenueStrongR10)
PMeanRevenueStrongR10
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
set.seed(1234)
## IDEA
price = 150
## Market Demand
minDemandWeak = 2000
maxDemandWeak = 8000
minDemandStrong = 6000
maxDemandStrong = 14000
# sample data & sample statistics
# for weak demand
inputVariableDemandWeakD10 = runif(10000, minDemandWeak, maxDemandWeak)
meanDemandWeak = mean(inputVariableDemandWeakD10)
meanDemandWeak
# hitogram of sample weak demand
hist(inputVariableDemandWeakD10,
xlab="Weak Demand, D (in single units)",
main="Distribution of Weak Demand, D (in single units)",
col="lightgreen")
# for strong demand
inputVariableDemandStrongD10 = runif(10000, minDemandStrong, maxDemandStrong)
meanDemandStrong = mean(inputVariableDemandStrongD10)
meanDemandStrong
# hitogram of sample strong demand
hist(inputVariableDemandStrongD10,
xlab="Strong Demand, D (in single units)",
main="Distribution of Strong Demand, D (in single units)",
col="lightgreen")
##Expected Value for Supplier S
SorderQuantityQ = 5000
SfixedCost = 0
SunitCost = 120
SvariableCost = SunitCost * SorderQuantityQ;
SvariableCost
# profit transform function
SProfitTransform <- function(x) SfixedCost - SvariableCost +
(price * min(x, SorderQuantityQ))
# Weak demand
SProfitWeakR10 <- sapply(inputVariableDemandWeakD10, SProfitTransform)
SProfitWeakR10
SMeanProfitWeakR10 <- mean(SProfitWeakR10)
SMeanProfitWeakR10
SSdProfitWeakR10 <- sd(SProfitWeakR10)
SSdProfitWeakR10
# hitogram of sample data usage
hist(SRevenueWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for Supplier S",
col="blue")
# Strong demand
SProfitStrongR10 <- sapply(inputVariableDemandStrongD10, SProfitTransform)
SProfitStrongR10
SMeanProfitStrongR10 <- mean(SProfitStrongR10)
SMeanProfitStrongR10
SSdProfitStrongR10 <- sd(SProfitStrongR10)
SSdProfitStrongR10
# hitogram of sample data usage
hist(SRevenueStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for supplier S",
col="blue")
##Expected Value for Supplier S
SorderQuantityQ = 5000
SfixedCost = 0
SunitCost = 120
SvariableCost = SunitCost * SorderQuantityQ;
SvariableCost
# profit transform function
SProfitTransform <- function(x) SfixedCost - SvariableCost +
(price * min(x, SorderQuantityQ))
# Weak demand
SProfitWeakR10 <- sapply(inputVariableDemandWeakD10, SProfitTransform)
SProfitWeakR10
SMeanProfitWeakR10 <- mean(SProfitWeakR10)
SMeanProfitWeakR10
SSdProfitWeakR10 <- sd(SProfitWeakR10)
SSdProfitWeakR10
# hitogram of sample data usage
hist(SProfitWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for Supplier S",
col="blue")
# Strong demand
SProfitStrongR10 <- sapply(inputVariableDemandStrongD10, SProfitTransform)
SProfitStrongR10
SMeanProfitStrongR10 <- mean(SProfitStrongR10)
SMeanProfitStrongR10
SSdProfitStrongR10 <- sd(SProfitStrongR10)
SSdProfitStrongR10
# hitogram of sample data usage
hist(SProfitStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) for supplier S",
col="blue")
##Supplier P
PorderQuantityQ = 10000
PfixedCost = 50000
PunitCost = 100
PvariableCost = PunitCost * PorderQuantityQ;
PvariableCost
# profit transform function
PProfitTransform <- function(x) - PfixedCost - (PunitCost * PorderQuantityQ) +
(price * min(x, PorderQuantityQ))
PRevenueTransform <- function(x) price * min(x, PorderQuantityQ)
# Weak demand
PRevenueWeakR10 <- sapply(inputVariableDemandWeakD10, PRevenueTransform)
PRevenueWeakR10
PMeanRevenueWeakR10 <- mean(PRevenueWeakR10)
PMeanRevenueWeakR10
PProfitWeakR10 <- sapply(inputVariableDemandWeakD10, PProfitTransform)
PProfitWeakR10
PMeanProfitWeakR10 <- mean(PProfitWeakR10)
PMeanProfitWeakR10
PSdProfitWeakR10 <- sd(PProfitWeakR10)
PSdProfitWeakR10
hist(PProfitWeakR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Revenue, R (in Euro) from supplier P",
col="blue")
# Strong demand
PProfitStrongR10 <- sapply(inputVariableDemandStrongD10, PProfitTransform)
PProfitStrongR10
PMeanProfitStrongR10 <- mean(PProfitStrongR10)
PMeanProfitStrongR10
PSdProfitStrongR10 <- sd(PProfitStrongR10)
PSdProfitStrongR10
main="Distribution of Profit, P (in Euro) from supplier P",
# hitogram of sample data usage
hist(PProfitStrongR10,
xlab="Revenue, R (in Euro)",
main="Distribution of Profit, P (in Euro) from supplier P",
col="blue")
SMeanProfitWeakR10
SMeanProfitStrongR10
PMeanRevenueWeakR10
PMeanProfitWeakR10
PMeanProfitStrongR10
-0.5*299719 + 0.5*304339
library(lpSolve)
install.packages("lpSolve")
costs <- matrix(PProfitWeakR10, 100)
PProfitWeakMatrix <- matrix(PProfitWeakR10, 100)
nr <- nrow(PProfitWeakMatrix)
nc <- ncol(PProfitWeakMatrix)
columns <- t(sapply(1:nc, function(x) rep(c(0, 1, 0), c(nr*(x-1), nr, nr*(nc-x)))))
rows <- t(sapply(1:nr, function(x) rep(rep(c(0, 1, 0), c(x-1, 1, nr-x)), nc)))
mod <- lp("max", as.vector(costs), rbind(columns, rows), "<=", rep(1, nr+nc), binary.vec=rep(TRUE, nr*nc))
rows
str(rows)
PProfitWeakMatrix <- matrix(PProfitWeakR10, 10000)
PProfitWeakMatrix <- matrix(PProfitWeakR10, 1000)
nr <- nrow(PProfitWeakMatrix)
nr
nc <- ncol(PProfitWeakMatrix)
nc
columns <- t(sapply(1:nc, function(x) rep(c(0, 1, 0), c(nr*(x-1), nr, nr*(nc-x)))))
head(columns)
rows <- t(sapply(1:nr, function(x) rep(rep(c(0, 1, 0), c(x-1, 1, nr-x)), nc)))
mod <- lp("max", as.vector(costs), rbind(columns, rows), "<=", rep(1, nr+nc), binary.vec=rep(TRUE, nr*nc))
